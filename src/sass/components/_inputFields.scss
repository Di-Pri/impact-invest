@use "../base" as b;

.input-text {
  display: block;
  border: none;
  border-bottom: 1.5px solid b.$line-color;
  padding-top: 7px;
  padding-bottom: 6px;
  background: none;
  width: 100%;
  font-family: b.$main-font-family;
  font-weight: 500;
  font-size: 18px;
  &:focus {
    outline: none;
  }
}

// Styling input names
@mixin input-names($down: true) {
  text-align: left;
  font-weight: 500;
  color: b.$sec-text-color;
  height: 20px;
  margin-top: 13px;
  @if $down {
    font-size: 18px;
    transform: translate(0, 27px);
  } @else {
    font-size: 15px;
    transform: translate(0, 0);
  }
}
.input-names-down {
  @include input-names($down: true);
}
.input-names-up {
  @include input-names($down: false);
  animation: move 0.2s ease-in-out 1 forwards;
}
.input-names-up-fixed {
  @include input-names($down: false);
}
@keyframes move {
  0% {
    transform: translate(0, 27px);
    font-size: 18px;
  }
  100% {
    transform: translate(0, 0);
    font-size: 15px;
  }
}

// Name as in passport component
.name-as-in-passport {
  margin-top: 5vh;
}

// Input error message
.input-error-message {
  font-size: 13px;
  color: b.$error-color;
  margin-top: 5px;
  margin-bottom: 10px;
  font-weight: 500;
  text-align: left;
  animation: shake 0.2s ease-in-out 1 forwards;
  span {
    color: b.$sec-text-color;
  }
}
@keyframes shake {
  0% {
    transform: translate(0);
  }
  33% {
    transform: translate(1.5px);
  }
  66% {
    transform: translate(-1.5px);
  }
  100% {
    transform: translate(0);
  }
}

// Input checkbox
.cookies {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-top: 50px;
  margin-bottom: 20px;
  .container {
    display: block;
    position: relative;
    padding-left: 25px;
    margin-left: 5px;
    margin-top: -20px;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  .container input {
    position: absolute;
    opacity: 0;
    height: 0;
    width: 0;
  }
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 20px;
    width: 20px;
    background: none;
    border: 1.5px solid b.$line-color;
  }
  .checkmark::after {
    content: "";
    position: absolute;
    display: none;
  }
  .container input:checked ~ .checkmark::after {
    display: block;
  }
  .container .checkmark::after {
    left: 5px;
    top: 1.1px;
    width: 5px;
    height: 10px;
    border: solid black;
    border-width: 0 1.55px 1.55px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }
  p {
    font-size: 13px;
    font-weight: 450;
    span {
      color: b.$sec-text-color;
    }
  }
}

// Country of residence radio inputs
.country-of-residence {
  display: flex;
  flex-direction: column;
  justify-content: center;
  label {
    width: 100%;
    text-align: center;
    border-bottom: 1.5px solid b.$line-color;
    padding-bottom: 1.7vh;
    padding-top: 4.7vh;
    font-size: 22px;
    font-weight: 300;
    position: relative;
    input {
      width: 0;
      height: 0;
    }
    span.showCheckMark {
      position: absolute;
      margin-left: 25px;
      margin-top: 3px;
    }
    span.showCheckMark::before {
      content: "";
      position: absolute;
      width: 8px;
      height: 16px;
      border: 1px solid black;
      border-width: 0 1.5px 1.5px 0;
      -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
      transform: rotate(45deg);
    }
  }
}

// Date of birth component
.date-of-birth {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 10px;
  margin-top: 4vh;
  // .keyboard-grid {
  //   display: grid;
  //   width: 70%;
  //   grid-template-columns: repeat(3, 1fr);
  //   grid-template-rows: repeat(4, 50px);
  // }
  .date-of-birth-input {
    background: none;
    width: 80vw;
    border: none;
    font-size: 36px;
    text-align: center;
    letter-spacing: 8px;
    color: b.$sec-text-color;
    &:focus {
      outline: none;
    }
    &::placeholder {
      color: b.$sec-text-color;
    }
  }
}

// Personal number component
.personal-number {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-top: 4vh;
  .personal-number-input {
    background: none;
    width: 95vw;
    border: none;
    font-size: 36px;
    text-align: center;
    letter-spacing: 6px;
    color: b.$sec-text-color;
    &:focus {
      outline: none;
    }
    &::placeholder {
      color: b.$sec-text-color;
    }
  }
}

// Login details component
.password-helper {
  margin-bottom: -20px;
  h4 {
    font-size: 15px;
    font-weight: 500;
    margin-top: 20px;
    margin-bottom: 5px;
  }
  p {
    font-size: 14px;
    font-weight: 400;
    padding-left: 25px;
    line-height: 25px;
    span {
      margin-right: 4.5px;
      svg {
        width: 9px;
        height: 9px;
      }
    }
  }
  .green {
    color: b.$success-color;
    span {
      margin-right: 2px;
      svg path {
        fill: b.$success-color;
      }
    }
  }
}

// SDGs styling
.user-values {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(87px, 1fr));
  gap: 11px;
  margin: 35px 8px 30px 8px;
  .one-sdg {
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 4px 4px 16px 0 rgb(21, 29, 37, 0.16);
    border-radius: 5px;
    position: relative;
    .sdg-button {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: 100%;
      border: none;
      background: none;
      border-radius: 5px;
    }
    svg {
      width: 100%;
      height: 100%;
      .cls-2 {
        fill: b.$bg-color;
      }
    }
  }
  .sdg-unchecked svg {
    fill: none;
    .cls-2 {
      fill: b.$chart-text-color;
    }
  }
}
